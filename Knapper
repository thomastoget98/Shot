import RPi.GPIO as GPIO
import time
import os
import subprocess

GPIO.setmode(GPIO.BCM)
GPIO.setup(8, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(1, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_UP)

def start_pwm_program():
    return subprocess.Popen(['python3', '/home/MadsenPi/Documents/PWM.EKSAMEN.PY'])

def start_graf_av_spill_program():
    return subprocess.Popen(['python3', '/home/MadsenPi/Documents/GRAF_AV_SPILL.PY'])

def reset_shots():
    subprocess.run(['python3', '/home/MadsenPi/Documents/reset_shots.py'])

def shutdown_raspberry_pi():
    os.system("sudo shutdown -h now")

try:
    pwm_process = None
    graf_av_spill_process = None

    while True:
        if GPIO.input(8) == False:
            if pwm_process is None or pwm_process.poll() is not None:
                pwm_process = start_pwm_program()
            while GPIO.input(8) == False:
                time.sleep(0.1)

        if GPIO.input(1) == False:
            if graf_av_spill_process is None or graf_av_spill_process.poll() is not None:
                graf_av_spill_process = start_graf_av_spill_program()
            while GPIO.input(1) == False:
                time.sleep(0.1)

        if GPIO.input(18) == False:
            start_time = time.time()

            while GPIO.input(18) == False:
                time.sleep(0.1)

            elapsed_time = time.time() - start_time

            if elapsed_time < 3:
                reset_shots()
            else:
                shutdown_raspberry_pi()

        time.sleep(0.1)

except KeyboardInterrupt:
    if pwm_process is not None:
        pwm_process.terminate()
    if graf_av_spill_process is not None:
        graf_av_spill_process.terminate()
    GPIO.cleanup()
